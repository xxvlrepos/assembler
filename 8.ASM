org 100h
 
;Начало
Begin: mov ax,3D00h  ;будем открывать файл для чтения
;       mov dx,offset File_name   ;ds:dx указывают на путь к файлу
       int 21h	      ;открываем
       jc Error_file  ;Если произошла ошибка (нет такого файла, слишком много открытых файлов,
		      ;ошибка чтения), то переходим на метку Error_file
       ;Запомним номер файла в переменной Handle.
       ;Для того чтобы прочитать файл, нужно в bx указать его номер, полученный
       ;после открытия, который находится в ax. Загрузка числа в один регистр из
       ;другого (а тем более, если используется ax) происходит быстрее, чем
       ;из памяти (переменной). Поэтому загружаем из ax, а не из переменной. Хотя
       ;запись mov bx,Handle не будет ошибочной.

;       mov Handle,ax  ;запомним номер файла в переменной Handle
       mov bx,ax
       mov ah,3Fh      ;функция 3Fh — чтение файла
       mov cx,0FDE8h   ;будем читать 0FDE8h = 65000 байт
       ;ds:dx должен указывать на буфер в памяти для чтения
;       mov dx,offset Buffer
       int 21h	       ;все готово. Читаем...
 
       mov ah,3Eh      ;закрываем файл
		       ;Номер файла должен находиться в bx. Но т. к. регистр bx менялся, то
		       ;загрузим его с нашей переменной (Handle)
;       mov bx,Handle
       int 21h	       ;закрываем файл
		       ;загрузим в dx строку с сообщением о том, что все в порядке.
;       mov dx, offset Mess_ok
Out_prog:
       mov ah,9        ;функция 09h — вывод строки на экран
       int 21h	       ;выводим строку
 
       int 20h	       ;выходим из программы
		       ;Загрузим в dx строку с сообщением о том, что не смогли открыть файл...
Error_file:
;       mov dx,offset Mess_error
       jmp Out_prog    ;...и пойдем на метку Out_prog (зачем нам дублировать код, если он уже есть?)
 
;=== Переменные ===
;     Handle dw 0        ;резерв 2 байта для нашей переменной
     Mess_ok db '« ЅРу ¬бзйЁФ!$'
     Mess_error db 'ФЁ з¦ ЁегЮ ЦеЖбсен Є ЅР '
 
;Будем читать этот файл:
       File_name db 'c:\config.sys',0,'!$'
 
       Buffer equ $
